#!/usr/bin/env python

import argparse
import json

import spellvardetection.util.learn_simplification_rules as simpl

parser = argparse.ArgumentParser()
parser.add_argument('spellvar_file')
parser.add_argument('rule_file')
parser.add_argument('--freq_thresh', type=int, default=30)
parser.add_argument('--prec_thresh', type=float, default=0.7)
args = parser.parse_args()

spellvars = json.load(open(args.spellvar_file, 'r'))

rules = simpl.getRulesAndFreqFromSpellvars(spellvars)
json.dump([rule for rule, rule_features in rules.items() if rule_features['tp'] >= args.freq_thresh and rule_features['tp']/(rule_features['tp']+rule_features['fp']) >= args.prec_thresh], open(args.rule_file, 'w'))
