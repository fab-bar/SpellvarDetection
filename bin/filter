#!/usr/bin/env python

import argparse
import json
import multiprocessing

from spellvardetection.type_filter import createTypeFilter
from spellvardetection.lib.util import load_from_file_if_string

parser = argparse.ArgumentParser()
parser.add_argument('candidates')
parser.add_argument('filter_settings')
parser.add_argument('--output_file', '-o', type=argparse.FileType('w'))
args = parser.parse_args()

candidates = load_from_file_if_string(args.candidates)
settings = load_from_file_if_string(args.filter_settings)
cand_filter = createTypeFilter(settings)

def apply_filter(word_candidates):
    return (word_candidates[0], list(cand_filter.filterCandidates(word_candidates[0], word_candidates[1])))

with multiprocessing.Pool(multiprocessing.cpu_count()) as pool:

    filtered = pool.map(apply_filter, candidates.items())

print(
    json.dumps({word_variants[0]: word_variants[1] for word_variants in filtered}),
    file=args.output_file)
