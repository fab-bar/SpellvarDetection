#!/usr/bin/env python

import argparse
import json
import multiprocessing

from spellvardetection.type_filter import SKLearnClassifierBasedTypeFilter

parser = argparse.ArgumentParser()
parser.add_argument('candidate_file')
parser.add_argument('modelfile_name')
parser.add_argument('output_file')
args = parser.parse_args()

candidates = json.load(open(args.candidate_file, 'r'))

cand_filter = SKLearnClassifierBasedTypeFilter.load(args.modelfile_name)


def apply_filter(word_candidates):
    return (word_candidates[0], list(cand_filter.filterCandidates(word_candidates[0], word_candidates[1])))

with multiprocessing.Pool(multiprocessing.cpu_count()) as pool:

    filtered = pool.map(apply_filter, candidates.items())


json.dump({word_variants[0]: word_variants[1] for word_variants in filtered}, open(args.output_file, 'w'))
